@*@using WebService.Models*@
@*@model IEnumerable<Reservation>*@

@{
    ViewBag.Title = "Index";
}



@section Scripts
{
    <script>
        
        var model = {
            reservations: ko.observableArray(), //定义模型数组，展现用
            editor: {                           //定义单个模型，提交用
                name: ko.observable(""),
                location: ko.observable("")
            },
            displaySummary: ko.observable(true)//设置显示或者隐藏
        };

        //自己封装了Ajax方法，包含method,回调，参数，请求数据
        function sendAjaxRequest(httpMethod, callback, url,reqData) {
            $.ajax("/api/web" + (url ? "/" + url : ""), {
                type: httpMethod,
                success: callback,
                data: reqData
            });
        }

     
        function getAllItem() {

            sendAjaxRequest("GET", function (data) {
                model.reservations.removeAll();
                for (var i = 0; i < data.length; i++) {
                    model.reservations.push(data[i]);
                }
            })
        }
     
            function removeItem(item) {
                sendAjaxRequest("DELETE", function () {
                    //getAllItem();//删除后不需要重新请求后台数据
                    //更新model.reservations，绑定后页面会自动更新，需要以方法model.reservations()的形式调用
                    for (var i = 0; i < model.reservations().length; i++) { 
                        if (model.reservations()[i].ReservationId == item.ReservationId) {
                            model.reservations.remove(model.reservations()[i]);
                            break;
                        }
                    }
                }, item.ReservationId)
        }
        function handleCreateClick() {
            model.displaySummary(false); //点击新增后隐藏列表，并显示添加的条目
        }

        function handleEditorClick() {
            sendAjaxRequest("POST", function (newItem) {
                model.reservations.push(newItem);
                model.displaySummary(true); //点击保存后隐藏添加界面，并显示列表
            }, null, {
                    ClientName: model.editor.name,
                    Location: model.editor.location
                });
        }

            $(document).ready(function () {
               
                getAllItem();
                ko.applyBindings(model);
            })
        
    </script>

}

@section Body
{
    @*<div id="summary" class="section panel panel-primary">
            @Html.Partial("Summary", Model)
        </div>

        <div id="editor" class="section panel panel-primary">
            @Html.Partial("Editor", new Reservation())
        </div>*@

    @* 使用Ajax请求不再需要form *@
    <div id="summary" class="section panel panel-primary" data-bind="if: model.displaySummary">
        <div class="panel-heading">
            Reservation Summary
        </div>
        <div class="panel-body">
            <table class="table table-striped table-condensed">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Location</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody data-bind="foreach:model.reservations">
                    <tr>
                        <td data-bind="text:ReservationId"></td>
                        <td data-bind="text:ClientName"></td>
                        <td data-bind="text:Location"></td>
                        <td>
                            <button class="btn btn-xs btn-primary" data-bind="click:removeItem">Remove</button>
                        </td>
                    </tr>
                </tbody>
            </table>
            <button class="btn btn-primary" data-bind="click:handleCreateClick">Create</button>
        </div>
    </div>
   
    <div id="editor" class="section panel panel-primary" data-bind="ifnot:model.displaySummary">

        <div class="panel-heading">
            Create Reservation
        </div>
        <div class="panel-body">
            <div class="form-group">
                <label>Client Name</label>
                <input class="form-control" data-bind="value:model.editor.name" />
            </div>
            <div class="form-group">
                <label>Location</label>
                <input class="form-control" data-bind="value:model.editor.location" />
            </div>
            <button class="btn btn-primary" data-bind="click:handleEditorClick">Save</button>
        </div>
    </div>
   }
